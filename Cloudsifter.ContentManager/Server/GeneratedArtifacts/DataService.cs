//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the cloudsifterData datasource.
    /// </summary>
    public sealed partial class cloudsifterDataService
        : global::LightSwitchApplication.cloudsifterData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cloudsifterDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserting(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserted(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updating(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updated(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleting(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleted(global::LightSwitchApplication.Category entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Validate(global::LightSwitchApplication.Category entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Category, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Inserting(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Inserted(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Updating(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Updated(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Deleting(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Deleted(global::LightSwitchApplication.Link entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Validate(global::LightSwitchApplication.Link entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Links_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Link, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Inserting(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Inserted(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Updating(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Updated(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Deleting(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Deleted(global::LightSwitchApplication.LinkCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Validate(global::LightSwitchApplication.LinkCategory entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkCategories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkCategory, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Inserting(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Inserted(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Updating(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Updated(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Deleting(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Deleted(global::LightSwitchApplication.LinkSpotter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Validate(global::LightSwitchApplication.LinkSpotter entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotters_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotter, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Inserting(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Inserted(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Updating(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Updated(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Deleting(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Deleted(global::LightSwitchApplication.LinkSpotterLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Validate(global::LightSwitchApplication.LinkSpotterLink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterLinks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterLink, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Inserting(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Inserted(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Updating(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Updated(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Deleting(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Deleted(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Validate(global::LightSwitchApplication.LinkSpotterUnprocessedLink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkSpotterUnprocessedLinks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterUnprocessedLink, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Inserting(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Inserted(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Updating(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Updated(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Deleting(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Deleted(global::LightSwitchApplication.Newsletter entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Validate(global::LightSwitchApplication.Newsletter entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Newsletters_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Newsletter, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Inserting(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Inserted(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Updating(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Updated(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Deleting(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Deleted(global::LightSwitchApplication.UnprocessedLink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Validate(global::LightSwitchApplication.UnprocessedLink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnprocessedLinks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnprocessedLink, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Category>
                __CategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Category>(
                    "Categories",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Categories_Filter);
            private static bool __Categories_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Categories_CanInsert(ref result);
                return result;
            }
            private static bool __Categories_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Categories_CanUpdate(ref result);
                return result;
            }
            private static bool __Categories_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Categories_CanDelete(ref result);
                return result;
            }
            private static bool __Categories_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Categories_CanRead(ref result);
                return result;
            }
            private static void __Categories_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Inserting(e);
            }
            private static void __Categories_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Inserted(e);
            }
            private static void __Categories_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Updating(e);
            }
            private static void __Categories_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Updated(e);
            }
            private static void __Categories_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Deleting(e);
            }
            private static void __Categories_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e)
            {
                d.Categories_Deleted(e);
            }
            private static void __Categories_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Category e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Categories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Category, bool>> __Categories_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Category, bool>> filter = null;
                d.Categories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Link>
                __LinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Link>(
                    "Links",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Links_Filter);
            private static bool __Links_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Links_CanInsert(ref result);
                return result;
            }
            private static bool __Links_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Links_CanUpdate(ref result);
                return result;
            }
            private static bool __Links_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Links_CanDelete(ref result);
                return result;
            }
            private static bool __Links_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Links_CanRead(ref result);
                return result;
            }
            private static void __Links_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Inserting(e);
            }
            private static void __Links_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Inserted(e);
            }
            private static void __Links_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Updating(e);
            }
            private static void __Links_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Updated(e);
            }
            private static void __Links_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Deleting(e);
            }
            private static void __Links_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e)
            {
                d.Links_Deleted(e);
            }
            private static void __Links_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Link e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Links_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Link, bool>> __Links_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Link, bool>> filter = null;
                d.Links_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkCategory>
                __LinkCategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkCategory>(
                    "LinkCategories",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkCategories_Filter);
            private static bool __LinkCategories_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkCategories_CanInsert(ref result);
                return result;
            }
            private static bool __LinkCategories_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkCategories_CanUpdate(ref result);
                return result;
            }
            private static bool __LinkCategories_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkCategories_CanDelete(ref result);
                return result;
            }
            private static bool __LinkCategories_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkCategories_CanRead(ref result);
                return result;
            }
            private static void __LinkCategories_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Inserting(e);
            }
            private static void __LinkCategories_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Inserted(e);
            }
            private static void __LinkCategories_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Updating(e);
            }
            private static void __LinkCategories_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Updated(e);
            }
            private static void __LinkCategories_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Deleting(e);
            }
            private static void __LinkCategories_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e)
            {
                d.LinkCategories_Deleted(e);
            }
            private static void __LinkCategories_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkCategory e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LinkCategories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkCategory, bool>> __LinkCategories_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkCategory, bool>> filter = null;
                d.LinkCategories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotter>
                __LinkSpottersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotter>(
                    "LinkSpotters",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotters_Filter);
            private static bool __LinkSpotters_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotters_CanInsert(ref result);
                return result;
            }
            private static bool __LinkSpotters_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotters_CanUpdate(ref result);
                return result;
            }
            private static bool __LinkSpotters_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotters_CanDelete(ref result);
                return result;
            }
            private static bool __LinkSpotters_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotters_CanRead(ref result);
                return result;
            }
            private static void __LinkSpotters_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Inserting(e);
            }
            private static void __LinkSpotters_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Inserted(e);
            }
            private static void __LinkSpotters_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Updating(e);
            }
            private static void __LinkSpotters_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Updated(e);
            }
            private static void __LinkSpotters_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Deleting(e);
            }
            private static void __LinkSpotters_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e)
            {
                d.LinkSpotters_Deleted(e);
            }
            private static void __LinkSpotters_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotter e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LinkSpotters_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotter, bool>> __LinkSpotters_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotter, bool>> filter = null;
                d.LinkSpotters_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotterLink>
                __LinkSpotterLinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotterLink>(
                    "LinkSpotterLinks",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterLinks_Filter);
            private static bool __LinkSpotterLinks_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterLinks_CanInsert(ref result);
                return result;
            }
            private static bool __LinkSpotterLinks_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterLinks_CanUpdate(ref result);
                return result;
            }
            private static bool __LinkSpotterLinks_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterLinks_CanDelete(ref result);
                return result;
            }
            private static bool __LinkSpotterLinks_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterLinks_CanRead(ref result);
                return result;
            }
            private static void __LinkSpotterLinks_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Inserting(e);
            }
            private static void __LinkSpotterLinks_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Inserted(e);
            }
            private static void __LinkSpotterLinks_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Updating(e);
            }
            private static void __LinkSpotterLinks_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Updated(e);
            }
            private static void __LinkSpotterLinks_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Deleting(e);
            }
            private static void __LinkSpotterLinks_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e)
            {
                d.LinkSpotterLinks_Deleted(e);
            }
            private static void __LinkSpotterLinks_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterLink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LinkSpotterLinks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterLink, bool>> __LinkSpotterLinks_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterLink, bool>> filter = null;
                d.LinkSpotterLinks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotterUnprocessedLink>
                __LinkSpotterUnprocessedLinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.LinkSpotterUnprocessedLink>(
                    "LinkSpotterUnprocessedLinks",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__LinkSpotterUnprocessedLinks_Filter);
            private static bool __LinkSpotterUnprocessedLinks_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterUnprocessedLinks_CanInsert(ref result);
                return result;
            }
            private static bool __LinkSpotterUnprocessedLinks_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterUnprocessedLinks_CanUpdate(ref result);
                return result;
            }
            private static bool __LinkSpotterUnprocessedLinks_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterUnprocessedLinks_CanDelete(ref result);
                return result;
            }
            private static bool __LinkSpotterUnprocessedLinks_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.LinkSpotterUnprocessedLinks_CanRead(ref result);
                return result;
            }
            private static void __LinkSpotterUnprocessedLinks_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Inserting(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Inserted(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Updating(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Updated(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Deleting(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e)
            {
                d.LinkSpotterUnprocessedLinks_Deleted(e);
            }
            private static void __LinkSpotterUnprocessedLinks_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.LinkSpotterUnprocessedLink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LinkSpotterUnprocessedLinks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterUnprocessedLink, bool>> __LinkSpotterUnprocessedLinks_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LinkSpotterUnprocessedLink, bool>> filter = null;
                d.LinkSpotterUnprocessedLinks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Newsletter>
                __NewslettersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.Newsletter>(
                    "Newsletters",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Newsletters_Filter);
            private static bool __Newsletters_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Newsletters_CanInsert(ref result);
                return result;
            }
            private static bool __Newsletters_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Newsletters_CanUpdate(ref result);
                return result;
            }
            private static bool __Newsletters_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Newsletters_CanDelete(ref result);
                return result;
            }
            private static bool __Newsletters_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.Newsletters_CanRead(ref result);
                return result;
            }
            private static void __Newsletters_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Inserting(e);
            }
            private static void __Newsletters_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Inserted(e);
            }
            private static void __Newsletters_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Updating(e);
            }
            private static void __Newsletters_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Updated(e);
            }
            private static void __Newsletters_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Deleting(e);
            }
            private static void __Newsletters_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e)
            {
                d.Newsletters_Deleted(e);
            }
            private static void __Newsletters_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.Newsletter e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Newsletters_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Newsletter, bool>> __Newsletters_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Newsletter, bool>> filter = null;
                d.Newsletters_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.UnprocessedLink>
                __UnprocessedLinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.cloudsifterDataService, global::LightSwitchApplication.UnprocessedLink>(
                    "UnprocessedLinks",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_CanInsert,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_CanUpdate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_CanDelete,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_CanRead,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Inserting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Inserted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Updating,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Updated,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Deleting,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Deleted,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Validate,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__UnprocessedLinks_Filter);
            private static bool __UnprocessedLinks_CanInsert(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.UnprocessedLinks_CanInsert(ref result);
                return result;
            }
            private static bool __UnprocessedLinks_CanUpdate(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.UnprocessedLinks_CanUpdate(ref result);
                return result;
            }
            private static bool __UnprocessedLinks_CanDelete(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.UnprocessedLinks_CanDelete(ref result);
                return result;
            }
            private static bool __UnprocessedLinks_CanRead(global::LightSwitchApplication.cloudsifterDataService d)
            {
                bool result = true;
                d.UnprocessedLinks_CanRead(ref result);
                return result;
            }
            private static void __UnprocessedLinks_Inserting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Inserting(e);
            }
            private static void __UnprocessedLinks_Inserted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Inserted(e);
            }
            private static void __UnprocessedLinks_Updating(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Updating(e);
            }
            private static void __UnprocessedLinks_Updated(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Updated(e);
            }
            private static void __UnprocessedLinks_Deleting(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Deleting(e);
            }
            private static void __UnprocessedLinks_Deleted(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e)
            {
                d.UnprocessedLinks_Deleted(e);
            }
            private static void __UnprocessedLinks_Validate(global::LightSwitchApplication.cloudsifterDataService d, global::LightSwitchApplication.UnprocessedLink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UnprocessedLinks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnprocessedLink, bool>> __UnprocessedLinks_Filter(global::LightSwitchApplication.cloudsifterDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnprocessedLink, bool>> filter = null;
                d.UnprocessedLinks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.cloudsifterDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.cloudsifterDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.cloudsifterDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.cloudsifterDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.cloudsifterDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.cloudsifterDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.cloudsifterDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.cloudsifterDataService>(
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.cloudsifterDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.cloudsifterDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.cloudsifterDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.cloudsifterDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
