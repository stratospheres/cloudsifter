//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Link_Link", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(cloudsifterData.Implementation.Link), "Link1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.Link), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Link_Newsletter", "Newsletter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(cloudsifterData.Implementation.Newsletter), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.Link), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkCategory_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.Category), "LinkCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkCategory), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkCategory_Link", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.Link), "LinkCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkCategory), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkSpotterLink_Link", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.Link), "LinkSpotterLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkSpotterLink), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkSpotterLink_LinkSpotter", "LinkSpotter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.LinkSpotter), "LinkSpotterLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkSpotterLink), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.LinkSpotter), "LinkSpotterUnprocessedLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkSpotterUnprocessedLink), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cloudsifterData.Implementation.UnprocessedLink), "LinkSpotterUnprocessedLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cloudsifterData.Implementation.LinkSpotterUnprocessedLink), true)]

#endregion

namespace cloudsifterData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class cloudsifterDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new cloudsifterDataObjectContext object using the connection string found in the 'cloudsifterDataObjectContext' section of the application configuration file.
        /// </summary>
        public cloudsifterDataObjectContext() : base("name=cloudsifterDataObjectContext", "cloudsifterDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cloudsifterDataObjectContext object.
        /// </summary>
        public cloudsifterDataObjectContext(string connectionString) : base(connectionString, "cloudsifterDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cloudsifterDataObjectContext object.
        /// </summary>
        public cloudsifterDataObjectContext(EntityConnection connection) : base(connection, "cloudsifterDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Link> Links
        {
            get
            {
                if ((_Links == null))
                {
                    _Links = base.CreateObjectSet<Link>("Links");
                }
                return _Links;
            }
        }
        private ObjectSet<Link> _Links;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkCategory> LinkCategories
        {
            get
            {
                if ((_LinkCategories == null))
                {
                    _LinkCategories = base.CreateObjectSet<LinkCategory>("LinkCategories");
                }
                return _LinkCategories;
            }
        }
        private ObjectSet<LinkCategory> _LinkCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkSpotter> LinkSpotters
        {
            get
            {
                if ((_LinkSpotters == null))
                {
                    _LinkSpotters = base.CreateObjectSet<LinkSpotter>("LinkSpotters");
                }
                return _LinkSpotters;
            }
        }
        private ObjectSet<LinkSpotter> _LinkSpotters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkSpotterLink> LinkSpotterLinks
        {
            get
            {
                if ((_LinkSpotterLinks == null))
                {
                    _LinkSpotterLinks = base.CreateObjectSet<LinkSpotterLink>("LinkSpotterLinks");
                }
                return _LinkSpotterLinks;
            }
        }
        private ObjectSet<LinkSpotterLink> _LinkSpotterLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkSpotterUnprocessedLink> LinkSpotterUnprocessedLinks
        {
            get
            {
                if ((_LinkSpotterUnprocessedLinks == null))
                {
                    _LinkSpotterUnprocessedLinks = base.CreateObjectSet<LinkSpotterUnprocessedLink>("LinkSpotterUnprocessedLinks");
                }
                return _LinkSpotterUnprocessedLinks;
            }
        }
        private ObjectSet<LinkSpotterUnprocessedLink> _LinkSpotterUnprocessedLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Newsletter> Newsletters
        {
            get
            {
                if ((_Newsletters == null))
                {
                    _Newsletters = base.CreateObjectSet<Newsletter>("Newsletters");
                }
                return _Newsletters;
            }
        }
        private ObjectSet<Newsletter> _Newsletters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnprocessedLink> UnprocessedLinks
        {
            get
            {
                if ((_UnprocessedLinks == null))
                {
                    _UnprocessedLinks = base.CreateObjectSet<UnprocessedLink>("UnprocessedLinks");
                }
                return _UnprocessedLinks;
            }
        }
        private ObjectSet<UnprocessedLink> _UnprocessedLinks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Links EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinks(Link link)
        {
            base.AddObject("Links", link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkCategories(LinkCategory linkCategory)
        {
            base.AddObject("LinkCategories", linkCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkSpotters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkSpotters(LinkSpotter linkSpotter)
        {
            base.AddObject("LinkSpotters", linkSpotter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkSpotterLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkSpotterLinks(LinkSpotterLink linkSpotterLink)
        {
            base.AddObject("LinkSpotterLinks", linkSpotterLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkSpotterUnprocessedLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkSpotterUnprocessedLinks(LinkSpotterUnprocessedLink linkSpotterUnprocessedLink)
        {
            base.AddObject("LinkSpotterUnprocessedLinks", linkSpotterUnprocessedLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Newsletters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNewsletters(Newsletter newsletter)
        {
            base.AddObject("Newsletters", newsletter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnprocessedLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnprocessedLinks(UnprocessedLink unprocessedLink)
        {
            base.AddObject("UnprocessedLinks", unprocessedLink);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.Int32 sortOrder)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            category.SortOrder = sortOrder;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = value;
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkCategory_Category", "LinkCategory")]
        public EntityCollection<LinkCategory> LinkCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkCategory>("LightSwitchApplication.FK_LinkCategory_Category", "LinkCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkCategory>("LightSwitchApplication.FK_LinkCategory_Category", "LinkCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Link object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="plugImageURL150x150">Initial value of the PlugImageURL150x150 property.</param>
        public static Link CreateLink(global::System.Int32 id, global::System.String title, global::System.String uRL, global::System.String description, global::System.String plugImageURL150x150)
        {
            Link link = new Link();
            link.Id = id;
            link.Title = title;
            link.URL = uRL;
            link.Description = description;
            link.PlugImageURL150x150 = plugImageURL150x150;
            return link;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = value;
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = value;
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlugImageURL150x150
        {
            get
            {
                return _PlugImageURL150x150;
            }
            set
            {
                OnPlugImageURL150x150Changing(value);
                ReportPropertyChanging("PlugImageURL150x150");
                _PlugImageURL150x150 = value;
                ReportPropertyChanged("PlugImageURL150x150");
                OnPlugImageURL150x150Changed();
            }
        }
        private global::System.String _PlugImageURL150x150;
        partial void OnPlugImageURL150x150Changing(global::System.String value);
        partial void OnPlugImageURL150x150Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentLinkId
        {
            get
            {
                return _ParentLinkId;
            }
            set
            {
                OnParentLinkIdChanging(value);
                ReportPropertyChanging("ParentLinkId");
                _ParentLinkId = value;
                ReportPropertyChanged("ParentLinkId");
                OnParentLinkIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentLinkId;
        partial void OnParentLinkIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentLinkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NewsletterId
        {
            get
            {
                return _NewsletterId;
            }
            set
            {
                OnNewsletterIdChanging(value);
                ReportPropertyChanging("NewsletterId");
                _NewsletterId = value;
                ReportPropertyChanged("NewsletterId");
                OnNewsletterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NewsletterId;
        partial void OnNewsletterIdChanging(Nullable<global::System.Int32> value);
        partial void OnNewsletterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Link_Link", "Link1")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("LightSwitchApplication.FK_Link_Link", "Link1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("LightSwitchApplication.FK_Link_Link", "Link1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Link_Link", "Link")]
        public Link Link1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_Link_Link", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_Link_Link", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> Link1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_Link_Link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("LightSwitchApplication.FK_Link_Link", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Link_Newsletter", "Newsletter")]
        public Newsletter Newsletter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Newsletter>("LightSwitchApplication.FK_Link_Newsletter", "Newsletter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Newsletter>("LightSwitchApplication.FK_Link_Newsletter", "Newsletter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Newsletter> NewsletterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Newsletter>("LightSwitchApplication.FK_Link_Newsletter", "Newsletter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Newsletter>("LightSwitchApplication.FK_Link_Newsletter", "Newsletter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkCategory_Link", "LinkCategory")]
        public EntityCollection<LinkCategory> LinkCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkCategory>("LightSwitchApplication.FK_LinkCategory_Link", "LinkCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkCategory>("LightSwitchApplication.FK_LinkCategory_Link", "LinkCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterLink_Link", "LinkSpotterLink")]
        public EntityCollection<LinkSpotterLink> LinkSpotterLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkSpotterLink>("LightSwitchApplication.FK_LinkSpotterLink_Link", "LinkSpotterLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkSpotterLink>("LightSwitchApplication.FK_LinkSpotterLink_Link", "LinkSpotterLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LinkCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkCategory object.
        /// </summary>
        /// <param name="linkId">Initial value of the LinkId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static LinkCategory CreateLinkCategory(global::System.Int32 linkId, global::System.Int32 categoryId)
        {
            LinkCategory linkCategory = new LinkCategory();
            linkCategory.LinkId = linkId;
            linkCategory.CategoryId = categoryId;
            return linkCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkId
        {
            get
            {
                return _LinkId;
            }
            set
            {
                if (_LinkId != value)
                {
                    OnLinkIdChanging(value);
                    ReportPropertyChanging("LinkId");
                    _LinkId = value;
                    ReportPropertyChanged("LinkId");
                    OnLinkIdChanged();
                }
            }
        }
        private global::System.Int32 _LinkId;
        partial void OnLinkIdChanging(global::System.Int32 value);
        partial void OnLinkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = value;
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkCategory_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LightSwitchApplication.FK_LinkCategory_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LightSwitchApplication.FK_LinkCategory_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LightSwitchApplication.FK_LinkCategory_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("LightSwitchApplication.FK_LinkCategory_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkCategory_Link", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkCategory_Link", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkCategory_Link", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkCategory_Link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("LightSwitchApplication.FK_LinkCategory_Link", "Link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LinkSpotter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkSpotter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkSpotter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static LinkSpotter CreateLinkSpotter(global::System.Int32 id, global::System.String fullName)
        {
            LinkSpotter linkSpotter = new LinkSpotter();
            linkSpotter.Id = id;
            linkSpotter.FullName = fullName;
            return linkSpotter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = value;
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = value;
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUID
        {
            get
            {
                return _PUID;
            }
            set
            {
                OnPUIDChanging(value);
                ReportPropertyChanging("PUID");
                _PUID = value;
                ReportPropertyChanged("PUID");
                OnPUIDChanged();
            }
        }
        private global::System.String _PUID;
        partial void OnPUIDChanging(global::System.String value);
        partial void OnPUIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterLink_LinkSpotter", "LinkSpotterLink")]
        public EntityCollection<LinkSpotterLink> LinkSpotterLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkSpotterLink>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotterLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkSpotterLink>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotterLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotterUnprocessedLink")]
        public EntityCollection<LinkSpotterUnprocessedLink> LinkSpotterUnprocessedLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkSpotterUnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotterUnprocessedLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkSpotterUnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotterUnprocessedLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LinkSpotterLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkSpotterLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkSpotterLink object.
        /// </summary>
        /// <param name="linkSpotterId">Initial value of the LinkSpotterId property.</param>
        /// <param name="linkId">Initial value of the LinkId property.</param>
        public static LinkSpotterLink CreateLinkSpotterLink(global::System.Int32 linkSpotterId, global::System.Int32 linkId)
        {
            LinkSpotterLink linkSpotterLink = new LinkSpotterLink();
            linkSpotterLink.LinkSpotterId = linkSpotterId;
            linkSpotterLink.LinkId = linkId;
            return linkSpotterLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkSpotterId
        {
            get
            {
                return _LinkSpotterId;
            }
            set
            {
                if (_LinkSpotterId != value)
                {
                    OnLinkSpotterIdChanging(value);
                    ReportPropertyChanging("LinkSpotterId");
                    _LinkSpotterId = value;
                    ReportPropertyChanged("LinkSpotterId");
                    OnLinkSpotterIdChanged();
                }
            }
        }
        private global::System.Int32 _LinkSpotterId;
        partial void OnLinkSpotterIdChanging(global::System.Int32 value);
        partial void OnLinkSpotterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkId
        {
            get
            {
                return _LinkId;
            }
            set
            {
                if (_LinkId != value)
                {
                    OnLinkIdChanging(value);
                    ReportPropertyChanging("LinkId");
                    _LinkId = value;
                    ReportPropertyChanged("LinkId");
                    OnLinkIdChanged();
                }
            }
        }
        private global::System.Int32 _LinkId;
        partial void OnLinkIdChanging(global::System.Int32 value);
        partial void OnLinkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeSpotted
        {
            get
            {
                return _TimeSpotted;
            }
            set
            {
                OnTimeSpottedChanging(value);
                ReportPropertyChanging("TimeSpotted");
                _TimeSpotted = value;
                ReportPropertyChanged("TimeSpotted");
                OnTimeSpottedChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeSpotted;
        partial void OnTimeSpottedChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeSpottedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterLink_Link", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkSpotterLink_Link", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkSpotterLink_Link", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("LightSwitchApplication.FK_LinkSpotterLink_Link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("LightSwitchApplication.FK_LinkSpotterLink_Link", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterLink_LinkSpotter", "LinkSpotter")]
        public LinkSpotter LinkSpotter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LinkSpotter> LinkSpotterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterLink_LinkSpotter", "LinkSpotter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LinkSpotterUnprocessedLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkSpotterUnprocessedLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkSpotterUnprocessedLink object.
        /// </summary>
        /// <param name="linkSpotterId">Initial value of the LinkSpotterId property.</param>
        /// <param name="unprocessedLinkId">Initial value of the UnprocessedLinkId property.</param>
        /// <param name="reportedDate">Initial value of the ReportedDate property.</param>
        public static LinkSpotterUnprocessedLink CreateLinkSpotterUnprocessedLink(global::System.Int32 linkSpotterId, global::System.Int32 unprocessedLinkId, global::System.DateTime reportedDate)
        {
            LinkSpotterUnprocessedLink linkSpotterUnprocessedLink = new LinkSpotterUnprocessedLink();
            linkSpotterUnprocessedLink.LinkSpotterId = linkSpotterId;
            linkSpotterUnprocessedLink.UnprocessedLinkId = unprocessedLinkId;
            linkSpotterUnprocessedLink.ReportedDate = reportedDate;
            return linkSpotterUnprocessedLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkSpotterId
        {
            get
            {
                return _LinkSpotterId;
            }
            set
            {
                if (_LinkSpotterId != value)
                {
                    OnLinkSpotterIdChanging(value);
                    ReportPropertyChanging("LinkSpotterId");
                    _LinkSpotterId = value;
                    ReportPropertyChanged("LinkSpotterId");
                    OnLinkSpotterIdChanged();
                }
            }
        }
        private global::System.Int32 _LinkSpotterId;
        partial void OnLinkSpotterIdChanging(global::System.Int32 value);
        partial void OnLinkSpotterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnprocessedLinkId
        {
            get
            {
                return _UnprocessedLinkId;
            }
            set
            {
                if (_UnprocessedLinkId != value)
                {
                    OnUnprocessedLinkIdChanging(value);
                    ReportPropertyChanging("UnprocessedLinkId");
                    _UnprocessedLinkId = value;
                    ReportPropertyChanged("UnprocessedLinkId");
                    OnUnprocessedLinkIdChanged();
                }
            }
        }
        private global::System.Int32 _UnprocessedLinkId;
        partial void OnUnprocessedLinkIdChanging(global::System.Int32 value);
        partial void OnUnprocessedLinkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportedDate
        {
            get
            {
                return _ReportedDate;
            }
            set
            {
                OnReportedDateChanging(value);
                ReportPropertyChanging("ReportedDate");
                _ReportedDate = value;
                ReportPropertyChanged("ReportedDate");
                OnReportedDateChanged();
            }
        }
        private global::System.DateTime _ReportedDate;
        partial void OnReportedDateChanging(global::System.DateTime value);
        partial void OnReportedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter")]
        public LinkSpotter LinkSpotter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LinkSpotter> LinkSpotterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LinkSpotter>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_LinkSpotter", "LinkSpotter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink")]
        public UnprocessedLink UnprocessedLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnprocessedLink> UnprocessedLinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "UnprocessedLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Newsletter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Newsletter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Newsletter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Newsletter CreateNewsletter(global::System.Int32 id, global::System.String name)
        {
            Newsletter newsletter = new Newsletter();
            newsletter.Id = id;
            newsletter.Name = name;
            return newsletter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = value;
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishDate;
        partial void OnPublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Link_Newsletter", "Link")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("LightSwitchApplication.FK_Link_Newsletter", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("LightSwitchApplication.FK_Link_Newsletter", "Link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UnprocessedLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnprocessedLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnprocessedLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        public static UnprocessedLink CreateUnprocessedLink(global::System.Int32 id, global::System.String uRL)
        {
            UnprocessedLink unprocessedLink = new UnprocessedLink();
            unprocessedLink.Id = id;
            unprocessedLink.URL = uRL;
            return unprocessedLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = value;
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = value;
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LinkSpotterUnprocessedLink_UnprocessedLink", "LinkSpotterUnprocessedLink")]
        public EntityCollection<LinkSpotterUnprocessedLink> LinkSpotterUnprocessedLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LinkSpotterUnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "LinkSpotterUnprocessedLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LinkSpotterUnprocessedLink>("LightSwitchApplication.FK_LinkSpotterUnprocessedLink_UnprocessedLink", "LinkSpotterUnprocessedLink", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
